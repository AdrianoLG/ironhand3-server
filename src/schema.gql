# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  _id: String!

  """Name of the author"""
  first_name: String!

  """Last name of the author"""
  last_name: String

  """Date of birth"""
  birth_date: String

  """Date of death"""
  death_date: String

  """Nationality of the author"""
  nationality: String

  """Notes about the author"""
  notes: String

  """List of authors books"""
  books: [Book!]!
}

type GetAuthorsPaginatedResponse {
  """List of authors"""
  authorList: [Author!]!

  """Total of authors"""
  authorsCount: Int!
}

type Book {
  _id: String!

  """Title of the book"""
  title: String!

  """Number of pages"""
  pages: Int

  """Cover of the book"""
  cover: String

  """Notes about the book"""
  notes: String

  """Authors of the book"""
  authors: [Author!]!
}

type GetBooksPaginatedResponse {
  """List of books"""
  bookList: [Book!]!
  booksCount: Int!
}

type Exercise {
  _id: String!

  """Exercise name"""
  name: String!

  """Body parts involved"""
  bodyParts: [String!]

  """Exercise type: strength, cardio or stretch"""
  type: String!

  """Exercise image"""
  img: String
}

type CompletedExercise {
  _id: String!

  """Date in which exercise was completed"""
  date: DateTime!

  """Exercise"""
  exercise: Exercise!

  """Time to complete exercise in minutes"""
  time: String

  """Exercise repetitions"""
  repetitions: Int

  """Weight involved in kilograms"""
  weight: Int

  """Maximum of PPM doing the exercise"""
  ppm_max: Int

  """Minimum of PPM doing the exercise"""
  ppm_min: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Header {
  _id: String!

  """Title of nav item"""
  title: String!

  """URL of nav item"""
  url: String!
}

type ShortcutCategory {
  _id: String!

  """Title of the category"""
  title: String!

  """List of shortcuts ids"""
  shortcuts: [Shortcut!]!
}

type Shortcut {
  _id: String!

  """Shortcut title"""
  title: String!

  """Shortcut subtitle"""
  subtitle: String

  """Shortcut image"""
  image: String!

  """Shortcut category"""
  category: ShortcutCategory!

  """Shortcut action"""
  action: String!
}

"""Response type"""
type ResponseType {
  """Response message"""
  message: String!

  """Count of completed operations"""
  count: Int!
}

type User {
  _id: String!

  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!

  """Name of the user"""
  name: String

  """City of the user"""
  city: String
}

type Query {
  users: [User!]!
  user(id: String!): User!
  books(limit: Int = 10, skip: Int = 0): GetBooksPaginatedResponse!
  book(id: String!): Book!
  authors(limit: Int = 10, skip: Int = 0): GetAuthorsPaginatedResponse!
  author(id: String!): Author!
  shortcuts: [Shortcut!]!
  shortcut(id: String!): Shortcut!
  shortcutCategories: [ShortcutCategory!]!
  shortcutCategory(id: String!): ShortcutCategory!
  headers: [Header!]!
  header(id: String!): Header!
  completedExercises: [CompletedExercise!]!
  completedExercise(id: String!): CompletedExercise!
  exercises: [Exercise!]!
  exercise(id: String!): Exercise!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  createBook(createBookInput: CreateBookInput!): Book!
  updateBook(updateBookInput: UpdateBookInput!): Book!
  removeBook(id: String!): Book!
  createAuthor(createAuthorInput: CreateAuthorInput!): Author!
  updateAuthor(updateAuthorInput: UpdateAuthorInput!): Author!
  removeAuthor(id: String!): Author!
  createShortcut(createShortcutInput: CreateShortcutInput!): Shortcut!
  updateShortcut(updateShortcutInput: UpdateShortcutInput!): Shortcut!
  removeShortcut(id: String!): ResponseType!
  createShortcutCategory(createShortcutCategoryInput: CreateShortcutCategoryInput!): ShortcutCategory!
  updateShortcutCategory(updateShortcutCategoryInput: UpdateShortcutCategoryInput!): ShortcutCategory!
  removeShortcutCategory(id: String!): ShortcutCategory!
  createHeader(createHeaderInput: CreateHeaderInput!): Header!
  updateHeader(updateHeaderInput: UpdateHeaderInput!): Header!
  removeHeader(id: String!): Header!
  createCompletedExercise(createCompletedExerciseInput: CreateCompletedExerciseInput!): CompletedExercise!
  updateCompletedExercise(updateCompletedExerciseInput: UpdateCompletedExerciseInput!): CompletedExercise!
  removeCompletedExercise(id: String!): CompletedExercise!
  createExercise(createExerciseInput: CreateExerciseInput!): Exercise!
  updateExercise(updateExerciseInput: UpdateExerciseInput!): Exercise!
  removeExercise(id: String!): Exercise!
}

input CreateUserInput {
  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!

  """Name of the user"""
  name: String

  """City of the user"""
  city: String
}

input UpdateUserInput {
  """Email of the user"""
  email: String

  """Password of the user"""
  password: String

  """Name of the user"""
  name: String

  """City of the user"""
  city: String
  _id: String!
}

input CreateBookInput {
  """Title of the book"""
  title: String!

  """Number of pages"""
  pages: Int

  """Cover of the book"""
  cover: String

  """ISBN of the book"""
  isbn: String

  """Notes about the book"""
  notes: String

  """List of authors ids"""
  authors: [String!]! = []
}

input UpdateBookInput {
  """Title of the book"""
  title: String

  """Number of pages"""
  pages: Int

  """Cover of the book"""
  cover: String

  """ISBN of the book"""
  isbn: String

  """Notes about the book"""
  notes: String

  """List of authors ids"""
  authors: [String!] = []
  _id: String!
}

input CreateAuthorInput {
  """Name of the author"""
  first_name: String!

  """Last name of the author"""
  last_name: String

  """Date of birth"""
  birth_date: String

  """Date of death"""
  death_date: String

  """Nationality of the author"""
  nationality: String

  """Notes about the author"""
  notes: String

  """List of books ids"""
  books: [String!]! = []
}

input UpdateAuthorInput {
  """Name of the author"""
  first_name: String

  """Last name of the author"""
  last_name: String

  """Date of birth"""
  birth_date: String

  """Date of death"""
  death_date: String

  """Nationality of the author"""
  nationality: String

  """Notes about the author"""
  notes: String

  """List of books ids"""
  books: [String!] = []
  _id: String!
}

input CreateShortcutInput {
  """Shortcut title"""
  title: String!

  """Shortcut subtitle"""
  subtitle: String!

  """Shortcut image"""
  image: String!

  """Shortcut category"""
  category: String!

  """Shortcut action"""
  action: String!
}

input UpdateShortcutInput {
  """Shortcut title"""
  title: String

  """Shortcut subtitle"""
  subtitle: String

  """Shortcut image"""
  image: String

  """Shortcut category"""
  category: String

  """Shortcut action"""
  action: String
  _id: String!
}

input CreateShortcutCategoryInput {
  """Title of the category"""
  title: String!

  """List of shortcuts ids"""
  shortcuts: [String!]! = []
}

input UpdateShortcutCategoryInput {
  """Title of the category"""
  title: String

  """List of shortcuts ids"""
  shortcuts: [String!] = []
  _id: String!
}

input CreateHeaderInput {
  """Title of nav item"""
  title: String!

  """URL of nav item"""
  url: String!
}

input UpdateHeaderInput {
  """Title of nav item"""
  title: String

  """URL of nav item"""
  url: String
  _id: String!
}

input CreateCompletedExerciseInput {
  """Exercise id"""
  exercise: String!

  """Date in which exercise was completed"""
  date: DateTime!

  """Time to complete exercise in minutes"""
  time: Int

  """Exercise repetitions"""
  repetitions: Int

  """Weight involved in kilograms"""
  weight: Int

  """Maximum of PPM doing the exercise"""
  ppm_max: Int

  """Minimum of PPM doing the exercise"""
  ppm_min: Int
}

input UpdateCompletedExerciseInput {
  """Exercise id"""
  exercise: String

  """Date in which exercise was completed"""
  date: DateTime

  """Time to complete exercise in minutes"""
  time: Int

  """Exercise repetitions"""
  repetitions: Int

  """Weight involved in kilograms"""
  weight: Int

  """Maximum of PPM doing the exercise"""
  ppm_max: Int

  """Minimum of PPM doing the exercise"""
  ppm_min: Int
  _id: String!
}

input CreateExerciseInput {
  """Exercise name"""
  name: String!

  """Body parts involved"""
  bodyParts: [String!]!

  """Exercise type: strength, cardio or stretch"""
  type: String!

  """Exercise image"""
  img: String!
}

input UpdateExerciseInput {
  """Exercise name"""
  name: String

  """Body parts involved"""
  bodyParts: [String!]

  """Exercise type: strength, cardio or stretch"""
  type: String

  """Exercise image"""
  img: String
  _id: String!
}